Index: src/com/company/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/company/Main.java b/src/com/company/Main.java
new file mode 100644
--- /dev/null	(date 1637389145061)
+++ b/src/com/company/Main.java	(date 1637389145061)
@@ -0,0 +1,47 @@
+package com.company;
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.Comparator;
+import java.util.List;
+
+public class Main {
+
+
+    public static void main(String[] args) {
+        List<Employee> list = new ArrayList<>();
+//        TODO Problem 1: Найти работников старше 50
+//        All the employee names whose age is more than 50.
+//
+//        TODO Problem 2: Найти работников USA#
+//        Remove all the Employees from the List who reside in the USA.
+//
+//        TODO Problem 3: Отсортировать всех работников по стране
+        list.add(new Employee("Alex", 23, "USA"));
+        list.add(new Employee("Dave", 34, "India"));
+        list.add(new Employee("Carl", 21, "USA"));
+        list.add(new Employee("Joe", 56, "Russia"));
+        list.add(new Employee("Amit", 64, "China"));
+        list.add(new Employee("Ryan", 19, "Brazil"));
+
+        for (int i = 0; i < list.size(); i++) {
+            Employee a = list.get(i);
+            if (a.age > 50) {
+                System.out.println(a.name + " " + a.age + " " + a.country);
+
+            }
+        }
+        for (int b = 0; b < list.size(); b++) {
+            Employee employee = list.get(b);
+            if (employee.country.equals("USA")){
+                System.out.println(employee.name + " " + employee.age + " " + employee.country);
+            }
+
+        }
+        Comparator<Employee> comparator = Comparator.comparing(o -> o.name);
+
+
+        list.sort(comparator); // use the comparator as much as u want
+        list.forEach(employee -> System.out.println(employee.country));
+    }
+}
\ No newline at end of file
Index: .idea/description.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/description.html b/.idea/description.html
new file mode 100644
--- /dev/null	(date 1637088141605)
+++ b/.idea/description.html	(date 1637088141605)
@@ -0,0 +1,1 @@
+<html>Simple <b>Java</b> application that includes a class with <code>main()</code> method</html>
\ No newline at end of file
Index: .idea/project-template.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/project-template.xml b/.idea/project-template.xml
new file mode 100644
--- /dev/null	(date 1637088141620)
+++ b/.idea/project-template.xml	(date 1637088141620)
@@ -0,0 +1,3 @@
+<template>
+  <input-field default="com.company">IJ_BASE_PACKAGE</input-field>
+</template>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1637088146572)
+++ b/.idea/modules.xml	(date 1637088146572)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/Rush.iml" filepath="$PROJECT_DIR$/Rush.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/runConfigurations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/runConfigurations.xml b/.idea/runConfigurations.xml
new file mode 100644
--- /dev/null	(date 1637088146695)
+++ b/.idea/runConfigurations.xml	(date 1637088146695)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RunConfigurationProducerService">
+    <option name="ignoredProducers">
+      <set>
+        <option value="com.android.tools.idea.compose.preview.runconfiguration.ComposePreviewRunConfigurationProducer" />
+      </set>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/encodings.xml b/.idea/encodings.xml
new file mode 100644
--- /dev/null	(date 1637088146679)
+++ b/.idea/encodings.xml	(date 1637088146679)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="PROJECT" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
new file mode 100644
--- /dev/null	(date 1637434944623)
+++ b/.gitignore	(date 1637434944623)
@@ -0,0 +1,2 @@
+# Project exclude paths
+/out/
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1637088163854)
+++ b/.idea/.gitignore	(date 1637088163854)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: src/com/company/Employee.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/company/Employee.java b/src/com/company/Employee.java
new file mode 100644
--- /dev/null	(date 1637389145070)
+++ b/src/com/company/Employee.java	(date 1637389145070)
@@ -0,0 +1,15 @@
+package com.company;
+
+public class Employee {
+
+    String name;
+    int age;
+    String country;
+
+    public Employee(String name, int age, String country) {
+        super();
+        this.name = name;
+        this.age = age;
+        this.country = country;
+    }
+}
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1637088146594)
+++ b/.idea/misc.xml	(date 1637088146594)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="EntryPointsManager">
+    <entry_points version="2.0" />
+  </component>
+  <component name="ProjectKey">
+    <option name="state" value="project://e2804f05-5315-4fc6-a121-c522a6c26470" />
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="liberica-11" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: Rush.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Rush.iml b/Rush.iml
new file mode 100644
--- /dev/null	(date 1637088146557)
+++ b/Rush.iml	(date 1637088146557)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: src/Lesson.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Lesson.java b/src/Lesson.java
new file mode 100644
--- /dev/null	(date 1637434859294)
+++ b/src/Lesson.java	(date 1637434859294)
@@ -0,0 +1,68 @@
+import java.util.Scanner;
+import java.util.concurrent.ThreadLocalRandom;
+
+public class Lesson {
+
+    public static void main(String[] args) {
+        String expressionString1 = "";
+        String expressionString2 = "";
+        StringBuilder str = new StringBuilder();
+        Scanner scanner = new Scanner(System.in);
+        int a = ThreadLocalRandom.current().nextInt(1, 25);
+        int x = ThreadLocalRandom.current().nextInt(1, 25);
+        int b = ThreadLocalRandom.current().nextInt(1, 25);
+        int c = a * x + b;
+        int d;
+        int expression = ThreadLocalRandom.current().nextInt(0, 4);
+        System.out.println(expression);
+        //System.out.println(x);
+        switch (expression) {
+            case 0:
+                str.append("Найдите выражение:").append(a).append("*X").append("+").append(b).append("=").append(c);
+                int x0 = (c - b) / a;
+                //a*x+b
+                System.out.println(str.toString());
+                d = x0;
+                break;
+            case 1:
+                str.append("Найдите выражение:").append(a).append("+X").append("-").append(b).append("=").append(c);
+                int x1 = c - b - a;
+                //a+x+b
+                System.out.println(str.toString());
+                d = x1;
+                break;
+            case 2:
+                str.append("Найдите выражение:").append(a).append("/X").append(x).append("+").append(b).append("=").append(c);
+                int x2 = (c - b) * a;
+                //a/x+b
+                System.out.println(str.toString());
+                d = x2;
+                break;
+            case 3:
+                str.append("Найдите выражение:").append(a).append("-X").append("+").append(b).append("=").append(c);
+                int x3 = (c - b - a) * -1;
+                //a-x+b
+                System.out.println(str.toString());
+                d = x3;
+                break;
+            case 4:
+                str.append("Найдите выражение:").append(a).append("*").append(x).append("/").append(b).append("=").append(c);
+                int x4 = c * b / a;
+                //a*x/b
+                System.out.println(str.toString());
+                break;
+
+            default:
+        }
+
+        int xx = scanner.nextInt();
+        //if (x == d){
+        //    System.out.printf("правильно");
+        //else System.out.println("не правильно");
+        // }
+
+        scanner.close();
+
+
+    }
+}
